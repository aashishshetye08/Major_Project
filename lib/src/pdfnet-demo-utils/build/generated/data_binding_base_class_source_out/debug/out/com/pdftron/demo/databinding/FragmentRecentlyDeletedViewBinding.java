// Generated by view binder compiler. Do not edit!
package com.pdftron.demo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import com.pdftron.demo.R;
import com.pdftron.pdf.widget.ForegroundCoordinatorLayout;
import com.pdftron.pdf.widget.recyclerview.SimpleRecyclerView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentRecentlyDeletedViewBinding implements ViewBinding {
  @NonNull
  private final LinearLayoutCompat rootView;

  @NonNull
  public final TextView emptyTextView;

  @NonNull
  public final ForegroundCoordinatorLayout fragmentContent;

  @NonNull
  public final Toolbar fragmentToolbar;

  @NonNull
  public final LinearLayoutCompat recentlyDeletedViewRoot;

  @NonNull
  public final SimpleRecyclerView recyclerView;

  @NonNull
  public final TextView trashDurationMessage;

  private FragmentRecentlyDeletedViewBinding(@NonNull LinearLayoutCompat rootView,
      @NonNull TextView emptyTextView, @NonNull ForegroundCoordinatorLayout fragmentContent,
      @NonNull Toolbar fragmentToolbar, @NonNull LinearLayoutCompat recentlyDeletedViewRoot,
      @NonNull SimpleRecyclerView recyclerView, @NonNull TextView trashDurationMessage) {
    this.rootView = rootView;
    this.emptyTextView = emptyTextView;
    this.fragmentContent = fragmentContent;
    this.fragmentToolbar = fragmentToolbar;
    this.recentlyDeletedViewRoot = recentlyDeletedViewRoot;
    this.recyclerView = recyclerView;
    this.trashDurationMessage = trashDurationMessage;
  }

  @Override
  @NonNull
  public LinearLayoutCompat getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRecentlyDeletedViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRecentlyDeletedViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_recently_deleted_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRecentlyDeletedViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.empty_text_view;
      TextView emptyTextView = rootView.findViewById(id);
      if (emptyTextView == null) {
        break missingId;
      }

      id = R.id.fragment_content;
      ForegroundCoordinatorLayout fragmentContent = rootView.findViewById(id);
      if (fragmentContent == null) {
        break missingId;
      }

      id = R.id.fragment_toolbar;
      Toolbar fragmentToolbar = rootView.findViewById(id);
      if (fragmentToolbar == null) {
        break missingId;
      }

      LinearLayoutCompat recentlyDeletedViewRoot = (LinearLayoutCompat) rootView;

      id = R.id.recycler_view;
      SimpleRecyclerView recyclerView = rootView.findViewById(id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.trash_duration_message;
      TextView trashDurationMessage = rootView.findViewById(id);
      if (trashDurationMessage == null) {
        break missingId;
      }

      return new FragmentRecentlyDeletedViewBinding((LinearLayoutCompat) rootView, emptyTextView,
          fragmentContent, fragmentToolbar, recentlyDeletedViewRoot, recyclerView,
          trashDurationMessage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
